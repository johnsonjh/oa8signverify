#!/usr/bin/env sh
# vim: filetype=sh:tabstop=4:tw=80

set -e > /dev/null 2>&1
set -u > /dev/null 2>&1

me=oa8sign
vers=1.1.1

osl=openssl
a85=ascii85

# shellcheck disable=SC2097,SC2098
if ! PATH="$(command -p env -i \
	getconf PATH)" \
		command -p env -i TMPDIR="${TMPDIR:-}" PATH="${PATH:-}" \
			rm -f \
				"$(command -p env -i TMPDIR="${TMPDIR:-}" mktemp)"; then
					printf '%s\n' \
						"Error: Misbehaving shell or environment; aborting" >&2
					exit 1
fi

cleanup() {
	command -p env -i \
		rm -f \
			"${tmpfile:-}" ||
				true
}

filename=${1:-}
privatekey=${2:-}

exitstatus=""
if [ ! command -p env \
	"${osl:?}" version > /dev/null 2>&1 ]; then
		exitstatus="${?:?Error: exitstatus undefined}"
		if [ "${exitstatus:-}" -eq 126 ]; then
			printf '%s\n' \
				"Error: ${osl:?} could not be executed" >&2
			exit 1
		elif [ "${exitstatus:-}" -eq 127 ]; then
			printf '%s\n' \
				"Error: ${osl:?} could not be found" >&2
			exit 1
		else
			printf '%s\n' \
				"Error: ${osl:?} failure ${exitstatus:-}" >&2
			exit 1
		fi
fi

exitstatus=""
if ! command -p env \
		"${a85:?}" -h > /dev/null 2>&1; then
			exitstatus="${?:?Error: exitstatus undefined}"
			if [ "${exitstatus:-}" -eq 126 ]; then
				printf '%s\n' \
					"Error: ${a85:?} could not be executed" >&2
				exit 1
			elif [ "${exitstatus:-}" -eq 127 ]; then
				printf '%s\n' \
					"Error: ${a85:?} could not be found" >&2
				printf '\t%s\n' \
					'Suggestion: "gem install Ascii85"' >&2
				exit 1
			else
				printf '%s\n' \
					"Error: ${a85:?} failure ${exitstatus:-}" >&2
				exit 1
			fi
fi

if [ "${#}" -lt 2 ]; then
	printf '%s\n' \
		"*** ${me:?Error: me undefined} (v${vers:?Error: vers undefined})"
	printf '\t%s\n' \
		"Usage: ${me:?} <file> <private.oa8>"
	exit 1
fi

if [ ! -f "${filename:?Error: filename undefined}" ]; then
	printf '%s\n' \
		"Error: \"${filename:?}\" not found" >&2
	exit 1
fi

if [ -f "${filename:?Error: filename undefined}.oa8" ]; then
	printf '%s\n' \
		"Error: \"${filename:?Error: filename undefined}.oa8\" exists" >&2
	exit 1
fi

if [ ! -f "${privatekey:?Error: privatekey undefined}" ]; then
	printf '%s\n' \
		"Error: Private key \"${privatekey:?}\" not found" >&2
	exit 1
fi

tmpfile=""
tmpfile=$(command -p env -i TMPDIR="${TMPDIR:-}" \
	mktemp) ||
		{
			printf '%s\n' \
				"Error: mktemp failure" >&2
			exit 1
		}

exitstatus=""
command -p env \
	"${osl:?}" dgst -sha3-512 \
		-sign "${privatekey:?Error: privatekey undefined}" \
			-out "${tmpfile:?Error: tmpfile undefined}" \
				"${filename:?Error: filename undefined}" ||
					{
						exitstatus="${?:?Error: exitstatus undefined}"
						if [ "${exitstatus:-}" -eq 126 ]; then
							printf '%s\n' \
								"Error: ${osl:?} could not be executed" >&2
							cleanup
							exit 1
						elif [ "${exitstatus:-}" -eq 127 ]; then
							printf '%s\n' \
								"Error: ${osl:?} could not be found" >&2
							cleanup
							exit 1
						else
							printf '%s\n' \
								"Error: ${osl:?} failure ${exitstatus:-}" >&2
							cleanup
							exit 1
						fi
					}

exitstatus=""
printf \
	'****** BEGIN OA8 SIGNATURE ******\n%s\n****** END OA8 SIGNATURE ******\n' \
		"$(command -p env \
			"${a85:?}" -w 61 \
				< "${tmpfile:?Error: filename undefined}")" \
					> "${filename:?Error: filename undefined}.oa8" ||
						{
							exitstatus="${?:?Error: exitstatus undefined}"
							if [ "${exitstatus:-}" -eq 126 ]; then
								printf '%s\n' \
									"Error: ${a85:?} could not be executed" >&2
								cleanup
								exit 1
							elif [ "${exitstatus:-}" -eq 127 ]; then
								printf '%s\n' \
									"Error: ${a85:?} could not be found" >&2
								cleanup
								exit 1
							else
								printf '%s\n' \
									"Error: ${me:?} failure ${exitstatus:-}" >&2
								cleanup
								exit 2
							fi
						}

cleanup

# Local Variables:
# mode: sh
# sh-shell: sh
# sh-indentation: 4
# sh-basic-offset: 4
# tab-width: 4
# End:
